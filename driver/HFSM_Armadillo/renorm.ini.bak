# Parameters for renormalization procedure, codes in Fortran 95.
# It reads the variable names and corresponding values as 
# variable = something
# You can have as many blank lines as you want.   
# to the left is btw the comment sign.But do not change the leftmost
# text string, which is needed by the code to identify which variable
# is used. 

# Determine the physical system, nuclear_physics or atomic_physics.
# The atomic physics case is a quantum dot in three dimension, with a 
# Coulomb interaction computed with 3dim Harmonic Oscillator wave functions
# The atomic case runs strictly in atomic units
physical_system = nuclear_physics

# Determine the renormalization procedure you want to do, only one a1t the time
# options are: g-matrix, no-core, vlowk  (sharp cutoff, solved by similarity 
# transformation), v-krg (RG flow eqautions in momentum space) or v-nrg
# (RG flow equations in oscillator space. You can also run with the bare
# interaction, use then vbare. 
type_of_renormv   =  vlowk


# Determine if you wish to include the Coulomb interaction or not
# options are: no-coulomb or coulomb
# Note that an interaction like v18 includes the coulomb explicitely. 
# This is checked in the code, the coulomb option below is redundant 
# with that interaction model.
coulomb_included  =  coulomb


# output_run is prefixed to output file for optional printouts, tests etc.
output_run = runkvrg5.dat


# output file for the renormalized NN interaction
renorminteraction_file  =  vint5.dat


# output file for the set of single-particle orbits, this file can be 
# further manipulated by the effective interaction part
spdata_file  =  sps5.dat


# Give the number of nucleons, recall that for nocore the results depend on A
mass_nucleus = 16


# Give the number electrons, needed when computing the renormalized 
# effective interaction  for 3Dim electrons
number_electrons = 0


# The oscillator energy in MeV (for electrons it is not used)
hbar_omega = 20.0

# The parameter lambda in front of the coulomb interaction for electrons
lambda_value = 0.0

# For the NN interaction you need to define the min and max value of J for the partial
# waves. Typical values are 0 and 6-10.   For the argonne interactions Jmax <= 4.  For waves greater
# than J_max, the Hamiltonian is set to zero in this version of the program.
jmin = 0
jmax = 10


# specify the type of NN interaction, here you can use
# Idaho-A, Idaho-B, CD-bonn, argonnev18, n3lo, argonnev8
# There is an important point concerning the different interaction models
# Idaho-A and Idaho-B have NO charge-symmetry (CSB) or charge-independence breaking terms  (ISB).
# The Argonne potentials run only with full CSB and CIB.  The N3LO and CD-bonn models allow
# you to run with or without one or both of these terms. 
# NO CSB means that for a given set of qauntum numbers ( a specific partial wave) the neutron-neutron
# and proton-proton parts are identical
# NO CIB  means that the proton-proton, neutron-neutron and proton-neutron interactions
# are equal. Isospin symmetry.   
# You can also use the following options, which give you the bare interaction only:
# OPEP  (one-pion exchange from Argonne v18), LSinteraction, only two-body spin-orbit from Argonne V8 and
# Tensorinteraction, only tensor part from Argonne V8.
# You can also use the N3LO interaction with a density dependent three-body correction.
# This option is n3lo3b
type_of_pot = n3lo
# File needed for interaction model with density dependent three-body force
threebody_file =   3binput.dat

# Here you specify if you wish to exclude CSB: options: 1) no-csb  2) csb
csb_choice =  csb

# Here you specify if you wish to exclude CIB: options: 1) no-cib  2) cib
cib_choice =  cib


# specify the type of model space, three choices: square, triangular or wings. For the 
# nocore and v-nrg calculations you can only use the triangular choice
pauli_operator  = square

# define the maximum values of  l and n for the model space. For square the model
# space 2n+l is entirely defined by lab_lmax.
lab_lmax = 5
lab_nmax = 2


#  if you do nocore or v-nrg, you need also to specify the cut in 2n+l for the huge space, use 200-300
#  for interactions like cdbonn or argonne  use 300.
max_space = 300


# If you do the g-matrix you need to specify the number of starting energies
# and their corresponding values. Typically you would use some 5 or more starting energies
# and they should all be smaller than the binding energy of the deuteron in order
# to avoid poles in the computation of G(w). The present code does not allow
# you to use positive starting energies. Typical start and end values are listed here.
# Based on the endpoints of the interval, the next values are generated by the simple algo
# first_value+  interval*i    where interval   is just end-start/number of values.
n_startenergy_g  = 5
first_startingenergy   =   -5.0
last_startingenergy   =   -140.0

# If you do Vlowk you need to specify the number of mesh points for the model 
# space and the large space. You need also to define the cutoff for the 
# model in space in fm^- 1 and the in principal infinite integration limit
# set it to 20 fm^-1.  Recall that the NN interactions is fitted up to 350 MeV.
# If you do v-krg, then k_cutoff is your RG point, typically 2-3 fm^-1.
# Your total number of integration points are n=n_k1+n_k2.  For Effective field
# interactions use k_max approximately 6-8 fm^-1.
# For standard OBE interactions  such as CD-Bonn or AV18, use k_max 20-30 fm^-1  
n_k1 = 100
n_k2 = 100
k_cutoff = 2.1
k_max = 6.0
